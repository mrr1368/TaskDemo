// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskDemo.Context;

#nullable disable

namespace TaskDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601151234_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskDemo.Models.BuyCommissionHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumberYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionAnalysis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalQuantity")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("Id");

                    b.ToTable("BuyCommissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = "1403/03/01",
                            Description = "درخواست خرید تجهیزات شبکه",
                            DocumentNumberYear = "123/1403",
                            Notes = "نیاز فوری به خرید",
                            OptionAnalysis = "مقایسه بین سه برند مختلف انجام شد",
                            RequiredDate = "1403/03/15",
                            TotalQuantity = 10m
                        });
                });

            modelBuilder.Entity("TaskDemo.Models.BuyCommissionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyCommissionHeaderId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastPurchaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("WarrantyOrManufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuyCommissionHeaderId");

                    b.ToTable("BuyCommissionItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyCommissionHeaderId = 1,
                            DeliveryTime = "1403/03/20",
                            LastPurchaseDate = "1402/12/15",
                            PaymentTerms = "نقدی",
                            Quantity = 10m,
                            SellerName = "شرکت داده‌پردازان نوین",
                            TotalPrice = 0m,
                            UnitPrice = 1500000m,
                            WarrantyOrManufacturer = "1 سال گارانتی / شرکت دی‌لینک"
                        });
                });

            modelBuilder.Entity("TaskDemo.Models.PaymentRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AmountNumeric")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAndBranch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEOApproval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CheckCount")
                        .HasColumnType("int");

                    b.Property<string>("CheckDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiefAccountant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShebaNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "1234567890123456",
                            AccountingManager = "زهرا حسینی",
                            ActionBy = "محمدرضا",
                            AmountNumeric = 30000000m,
                            BankAndBranch = "بانک ملت - شعبه مرکزی",
                            CEOApproval = "مدیر عامل شرکت",
                            CheckCount = 2,
                            CheckDate = "1403/03/05",
                            ChiefAccountant = "مهندس کریمی",
                            FormNumber = "FR-2023-001",
                            NationalCode = "1234567890",
                            PaymentReason = "پرداخت مرحله اول قرارداد",
                            RecipientName = "شرکت داده‌پردازان نوین",
                            RequestDate = "1403/03/02",
                            ShebaNumber = "IR820540102680020817909002",
                            UnitManager = "علی احمدی"
                        });
                });

            modelBuilder.Entity("TaskDemo.Models.BuyCommissionItem", b =>
                {
                    b.HasOne("TaskDemo.Models.BuyCommissionHeader", "BuyCommissionHeader")
                        .WithMany("Items")
                        .HasForeignKey("BuyCommissionHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyCommissionHeader");
                });

            modelBuilder.Entity("TaskDemo.Models.BuyCommissionHeader", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
